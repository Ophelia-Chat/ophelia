# This workflow builds an iPhone app using Xcode
name: Build iPhone App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Check out the repository
      - name: Check Out Code
        uses: actions/checkout@v4

      # Set up Xcode environment
      - name: Set up Xcode
        run: sudo xcode-select -switch /Applications/Xcode.app

      # List available Xcode versions for debugging
      - name: Debug Xcode Version
        run: |
          echo "Using Xcode version:"
          xcodebuild -version

      # Cache DerivedData to speed up builds
      - name: Cache DerivedData
        uses: actions/cache@v3
        with:
          path: DerivedData
          key: ${{ runner.os }}-xcode-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      # Build the app
      - name: Build App
        run: |
          xcodebuild -workspace ophelia/ophelia.xcodeproj/project.xcworkspace \
                     -scheme ophelia \
                     -sdk iphonesimulator \
                     -destination 'platform=iOS Simulator,name=iPhone 14,OS=17.5' \
                     build

      # Debug potential build issues
      - name: Check Derived Data and Logs
        if: failure()
        run: |
          echo "DerivedData directory contents:"
          ls DerivedData || echo "DerivedData not found"
          echo "Build Logs:"
          cat /Users/runner/Library/Logs/DiagnosticReports/xcodebuild*
