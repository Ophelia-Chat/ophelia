name: Build & Test iPhone App

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  build:
    runs-on: macos-latest
    env:
      XCODE_VERSION_PATH: "/Applications/Xcode_16.1.app"
      WORKSPACE: "ophelia.xcodeproj/project.xcworkspace"
      SCHEME: "ophelia"
      DESTINATION: "platform=iOS Simulator,name=iPhone 16,OS=18.1"
      CACHE_KEY_PREFIX: "ophelia-xcode-cache"

    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Select Xcode Version
        run: sudo xcode-select -switch $XCODE_VERSION_PATH

      - name: Debug Environment
        run: |
          echo "Xcode Version:"
          xcodebuild -version
          echo "Available Simulators:"
          xcrun simctl list

      # Use a stable cache key to maximize cache hits based on the project files.
      - name: Cache DerivedData
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ env.CACHE_KEY_PREFIX }}-${{ runner.os }}-${{ hashFiles('ophelia.xcodeproj/**', 'Package.resolved') }}
          restore-keys: |
            ${{ env.CACHE_KEY_PREFIX }}-${{ runner.os }}-

      - name: Build App
        run: |
          set -o pipefail && xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -sdk iphonesimulator \
            -destination "$DESTINATION" \
            build | xcpretty
        shell: bash

      # Upload logs if build fails for debugging
      - name: Upload Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: ~/Library/Logs/DiagnosticReports/

  test:
    runs-on: macos-latest
    needs: build
    env:
      XCODE_VERSION_PATH: "/Applications/Xcode_16.1.app"
      WORKSPACE: "ophelia.xcodeproj/project.xcworkspace"
      SCHEME: "ophelia"
      DESTINATION: "platform=iOS Simulator,name=iPhone 16,OS=18.1"

    steps:
      - name: Check Out Code
        uses: actions/checkout@v4

      - name: Select Xcode Version
        run: sudo xcode-select -switch $XCODE_VERSION_PATH

      - name: Run Tests
        run: |
          set -o pipefail && xcodebuild \
            -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -sdk iphonesimulator \
            -destination "$DESTINATION" \
            test | xcpretty
        shell: bash

      - name: Upload Test Results on Failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: ~/Library/Logs/DiagnosticReports/
