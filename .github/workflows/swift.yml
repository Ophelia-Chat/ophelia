# This workflow builds an iPhone app using Xcode
name: Build iPhone App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Check out the repository
      - name: Check Out Code
        uses: actions/checkout@v4

      # Select Xcode 16.1
      - name: Select Xcode Version
        run: sudo xcode-select -switch /Applications/Xcode_16.1.app

      # Check Xcode version and list simulators
      - name: Debug Environment
        run: |
          echo "Xcode Version:"
          xcodebuild -version
          echo "Available Simulators:"
          xcrun simctl list

      # Ensure DerivedData directory exists
      - name: Ensure DerivedData Exists
        run: mkdir -p ~/Library/Developer/Xcode/DerivedData

      # Cache DerivedData
      - name: Cache DerivedData
        uses: actions/cache@v3
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-xcode-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-xcode-

      # List project files for debugging
      - name: List Project Directory
        run: ls -R ophelia

      # Build the app
      - name: Build App
        run: |
          xcodebuild -workspace ophelia/ophelia.xcodeproj/project.xcworkspace \
                     -scheme ophelia \
                     -sdk iphonesimulator \
                     -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.1' \
                     build

      # Debug DerivedData if build fails
      - name: Check Derived Data
        if: failure()
        run: |
          echo "DerivedData Directory:"
          ls ~/Library/Developer/Xcode/DerivedData || echo "DerivedData not found"
